@model Movie_Theater.Models.Shows

@{
    ViewData["Title"] = "Create";
}

@section Styles
{
    <!-- sweetalert2樣式 -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.1/dist/sweetalert2.min.css" rel="stylesheet" />
    <style>
        /* 自定義的 CSS */

        /* 卡片懸停效果 */
        .card-hover:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            /* 滑鼠懸停時顯示陰影效果 */
            transform: scale(1.02);
            /* 滑鼠懸停時放大 1.02 倍 */
            transition: 0.3s;
            /* 懸停效果的過渡時間 */
        }

        .card-hover {
            transition: 0.3s;
            /* 卡片懸停效果的過渡時間 */
        }

        .remove-schedule {
            position: absolute;
            /* 絕對定位 */
            bottom: 10px;
            /* 底部距離 10 像素 */
            right: 10px;
            /* 右側距離 10 像素 */
        }

        .container-custom {
            max-width: 1200px;
            /* 容器最大寬度為 1200 像素 */
            margin: 0 auto;
            /* 水平置中 */
        }
    </style>
}

<!-- 主要內容 -->
<div class="container mt-5 container-custom">
    <div class="row">
        <!-- 左側欄位 -->
        <div class="col-md-6">
            <h3>新增電影場次</h3>
            <!-- 場次表單 -->
            <form id="schedule-form">
                <div class="mb-3">
                    <label asp-for="Auditorium_Id" class="form-label">影廳</label>
                    <!-- 影廳選擇下拉式選單 -->
                    @* <select class="form-select" id="auditorium"> *@
                    <select asp-for="Auditorium_Id" class="form-select">
                    </select>
                </div>
                <div class="mb-3">
                    <label for="date" class="form-label">日期</label>
                    <!-- 日期選擇欄位 -->
                    <input type="date" class="form-control" id="date">
                </div>
                <div class="mb-3">
                    <label for="movie" class="form-label">電影</label>
                    <!-- 電影選擇下拉式選單，並附帶電影時長資料 -->
                    @* <select class="form-select" id="movie"> *@
                    <select asp-for="Movie_Id" class="form-select" asp-items="@ViewBag.Movies">
                        <option selected>選擇電影</option>
                        <option value="Movie1" data-duration="120">電影 1 (120分鐘)</option>
                        <option value="Movie2" data-duration="100">電影 2 (100分鐘)</option>
                        <option value="Movie3" data-duration="150">電影 3 (150分鐘)</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="time" class="form-label">時間</label>
                    <!-- 時間選擇欄位 -->
                    <input type="time" class="form-control" id="time">
                </div>
                <!-- 新增場次按鈕 -->
                <button type="button" class="btn btn-primary" id="add-schedule">加入</button>
            </form>
        </div>
        <!-- 右側清單 -->
        <div class="col-md-6">
            <h3>所有場次清單</h3>
            <div class="mb-3">
                <label for="schedule-date" class="form-label">選擇日期</label>
                <!-- 日期篩選下拉式選單 -->
                <select class="form-select" id="schedule-date">
                    <option selected>顯示所有日期</option>
                    <!-- 動態新增日期選項 -->
                </select>
            </div>
            <div class="card">
                <div class="card-header">
                    已加入的場次
                </div>
                <div class="card-body" id="schedule-list">
                    <!-- 動態新增場次清單 -->
                </div>
            </div>
            <!-- 送出按鈕 -->
            <button class="btn btn-success mt-3" id="submit-schedules">送出</button>
        </div>
    </div>
</div>

@section Scripts
{
    <!-- sweetalert2套件 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.1/dist/sweetalert2.all.min.js"></script>
    <script>
        // 先從後端獲取影城選項數據
        $.getJSON('/Shows/GetTheaters', function (theaters) {
            // 將選項數據生成HTML
            let theaterOptions = theaters.map(theater => {
                return `<option value="${theater.value}">${theater.text}</option>`;
            }).join('');

            // 使用 SweetAlert2 顯示彈出框
            Swal.fire({
                title: '請選擇影城',
                html: `
                        <select id="swal-select-theater" class="swal2-input">
                            <option value="" selected>選擇影城</option>
                            ${theaterOptions}
                        </select>
                    `,
                showCancelButton: true,
                confirmButtonText: '確認',
                cancelButtonText: '取消',
                preConfirm: () => {
                    const selectedTheater = document.getElementById('swal-select-theater').value;
                    if (!selectedTheater) {
                        Swal.showValidationMessage('請選擇一個影城');
                    }
                    return selectedTheater;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // 使用 Ajax 將選擇的影城 ID 傳遞給後端
                    $.ajax({
                        url: `/Shows/GetAuditoriumsByTheater/${result.value}`,
                        type: 'GET',
                        //data: { theaterId: result.value },
                    }).done(response => {
                        // 將影廳選項插入到影廳下拉選單
                        let auditoriumSelect = $('#Auditorium_Id');
                        auditoriumSelect.empty(); // 清空當前選項
                        auditoriumSelect.append('<option value="" selected>選擇影廳</option>'); // 添加預設選項
                        response.forEach(auditorium => {
                            console.log(auditorium);
                            auditoriumSelect.append(`<option value="${auditorium.value}">${auditorium.text}</option>`);
                        });

                        // 處理後端返回的數據
                        Swal.fire({
                            title: '影廳名稱',
                            text: '成功獲取影廳資料',
                            icon: 'success'
                        });
                        console.log(response); // 可以在這裡處理返回的影廳數據


                    }).fail(error => {
                        Swal.fire({
                            title: '錯誤',
                            text: '無法獲取影廳資料',
                            icon: 'error'
                        });
                        console.error(error);
                    });
                        
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire({
                        title: '已取消',
                        text: '你取消了選擇',
                        icon: 'error'
                    });
                }
            });
        });
        // 在表單提交前處理數據
        $('#showForm').on("submit", function () {
            // 阻止表單的默認提交行為
            e.preventDefault();

            // 手動觸發表單提交
            this.submit();
        });
    </script>
    @* <script>
        $(document).ready(function () {
            // 儲存已新增的日期，用 Set 來確保唯一性
            const addedDates = new Set();

            // 點擊新增場次按鈕
            $('#add-schedule').on('click', function () {
                // 取得下拉選單影廳值
                let auditorium = $('#auditorium').val();
                // 取得表單日期值
                let date = $('#date').val();
                // 取得下拉選單電影值
                let movie = $('#movie option:selected').text();
                // 取得下拉選單電影片長值
                let duration = $('#movie option:selected').data('duration');
                // 取得表單時間值
                let time = $('#time').val();

                // 檢查是否所有欄位都有填寫
                if (auditorium && date && movie && time) {
                    // 新增一個日期放入表單輸入的時間，確保時間計算準確性
                    let endTime = new Date(`1970-01-01T${time}:00`);
                    // 把取出日期內的分鐘加上片長(分鐘)，算出結束時間
                    endTime.setMinutes(endTime.getMinutes() + duration);
                    // 將時間轉成HH:mm
                    let formattedEndTime = endTime.toTimeString().slice(0, 5);

                    // 檢查是否有同時段的場次
                    let conflict = false;
                    $('#schedule-list .schedule-item').each(function () {
                        // 取已加入場次的data屬性內日期 => 輸入的日期
                        let existingDate = $(this).data('date');
                        // 取已加入場次的data屬性內時間 => 輸入的時間
                        let existingTime = $(this).data('time');
                        // 取已加入場次的data屬性內結束時間 => 計算後的結束時間
                        let existingEndTime = $(this).data('end-time');
                        // 判斷是否有重複的場次存在
                        if (existingDate === date && ((time >= existingTime && time < existingEndTime) ||
                            (formattedEndTime > existingTime && formattedEndTime <= existingEndTime) ||
                            (time <= existingTime && formattedEndTime >= existingEndTime))) {
                            // 存在重複場次
                            conflict = true;
                            return false;  // 跳出循環
                        }
                    });

                    // 如果有衝突，顯示警告並返回
                    if (conflict) {
                        alert('該時段已有其他場次');
                        return;
                    }

                    // 動態產生場次項目的 HTML
                    let scheduleItem =
                        `<div class="col-md-12 mt-2 position-relative schedule-item" data-date="${date}" data-time="${time}" data-end-time="${formattedEndTime}">
                    <div class="card card-hover">
                        <div class="card-body">
                            <h5 class="card-title">${movie}</h5>
                            <p class="card-text">${date} ${time} - ${formattedEndTime}</p>
                            <button type="button" class="btn btn-danger btn-sm remove-schedule">刪除</button>
                        </div>
                    </div>
                </div>`;

                    // 將場次項目加入到清單中
                    $('#schedule-list').append(scheduleItem);

                    // 如果日期集合中尚未包含當前新增的日期，執行以下操作
                    if (!addedDates.has(date)) {
                        // 新增一筆日期到下拉選單
                        $('#schedule-date').append(`<option value="${date}">${date}</option>`);
                        addedDates.add(date);

                        // 收集所有選項並排序
                        let options = $('#schedule-date option');
                        options.sort(function (a, b) {
                            return new Date($(a).val()) - new Date($(b).val());
                        });

                        // 清空原有選項
                        $('#schedule-date').empty();

                        // 將排序後的選項重新加入下拉選單
                        options.each(function () {
                            $('#schedule-date').append($(this));
                        });
                    }

                    // 重新排序已加入的場次
                    sortScheduleList();
                } else {
                    // 如果有欄位未填寫，顯示警告
                    alert('請填寫所有欄位');
                }
            });

            // 點擊刪除按鈕
            $(document).on('click', '.remove-schedule', function () {
                // 刪除鄰近remove-schedule的col-md-12
                $(this).closest('.col-md-12').remove();
                // 重新排序已加入的場次
                sortScheduleList();
            });

            // 日期選擇變更事件
            $('#schedule-date').on('change', function () {
                let selectedDate = $(this).val();
                if (selectedDate === '顯示所有日期') {
                    $('.schedule-item').show();
                } else {
                    $('.schedule-item').hide();
                    $(`.schedule-item[data-date="${selectedDate}"]`).show();
                }
            });

            // 點擊送出按鈕
            $('#submit-schedules').on('click', function () {
                // 送出資料的邏輯，這裡可以加入AJAX呼叫後端API等
                alert('所有場次已送出');
            });

            // 函數：重新排序已加入的場次
            function sortScheduleList() {
                let scheduleList = $('#schedule-list .schedule-item');
                scheduleList.sort(function (a, b) {
                    let timeA = $(a).data('time');
                    let timeB = $(b).data('time');
                    return new Date(`1970-01-01T${timeA}:00`) - new Date(`1970-01-01T${timeB}:00`);
                });
                $('#schedule-list').empty().append(scheduleList);
            }
        }); *@

        </script>
}